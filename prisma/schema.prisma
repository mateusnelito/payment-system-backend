generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id
  fullName     String    @map("full_name")
  bi           String    @unique
  email        String    @unique
  passwordHash String    @map("password_hash")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  Account      Account[]

  @@map("users")
}

model AccountType {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  Account Account[]

  @@map("account_types")
}

model Account {
  id            String   @id
  userId        String   @map("user_id")
  accountTypeId Int      @map("account_type_id")
  balance       Decimal  @default(0)
  createdAt     DateTime @default(now()) @map("created_at")

  User                 User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  AccountType          AccountType   @relation(fields: [accountTypeId], references: [id], onDelete: Cascade)
  sentTransactions     Transaction[] @relation("FromAccount")
  receivedTransactions Transaction[] @relation("ToAccount")

  @@unique([userId, accountTypeId])
  @@map("accounts")
}

model Transaction {
  id            Int      @id @default(autoincrement())
  fromAccountId String   @map("from_account_id")
  toAccountId   String   @map("to_account_id")
  amount        Decimal
  createdAt     DateTime @default(now()) @map("created_at")

  FromAccount Account @relation("FromAccount", fields: [fromAccountId], references: [id], onDelete: Cascade)
  ToAccount   Account @relation("ToAccount", fields: [toAccountId], references: [id], onDelete: Cascade)

  @@map("transactions")
}
